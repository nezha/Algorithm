package com.nezha.ArtConcurrentBook.chapter08;import java.util.concurrent.Exchanger;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/** * @author tengfei.fangtf * @version $Id: ExchangerTest.java, v 0.1 2015-8-1 ����12:10:37 tengfei.fangtf Exp $ */public class ExchangerTest {    private static final Exchanger<String> exgr = new Exchanger<String>();    private static ExecutorService threadPool = Executors.newFixedThreadPool(2);    public static void main(String[] args) {        threadPool.execute(new Runnable() {            public void run() {                try {                    for (int i = 0; i < 5; i++) {                        String A = "Bank info A -" + i;                        exgr.exchange(A);                    }                } catch (InterruptedException e) {                }            }        });        threadPool.execute(new Runnable() {            public void run() {                try {                    for (int i=0;i<5;i++){                        String B = "Bank info B "+i;//                    TimeUnit.SECONDS.sleep(2);                        String A = exgr.exchange(B);                        System.out.println("A and B is same:" + A.equals(B) + "\nA is:" + A + "\nB is :" + B);                    }                } catch (InterruptedException e) {                }            }        });        threadPool.shutdown();    }}